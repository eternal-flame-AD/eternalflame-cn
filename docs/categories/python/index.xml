<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Eternal-flame-AD</title>
    <link>/categories/python/</link>
    <description>Recent content in Python on Eternal-flame-AD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Oct 2018 08:53:24 +0000</lastBuildDate>
    
	<atom:link href="/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Python抓取rejet作品官博</title>
      <link>/blog/2018/10/%E4%BD%BF%E7%94%A8python%E6%8A%93%E5%8F%96rejet%E4%BD%9C%E5%93%81%E5%AE%98%E5%8D%9A/</link>
      <pubDate>Fri, 05 Oct 2018 08:53:24 +0000</pubDate>
      
      <guid>/blog/2018/10/%E4%BD%BF%E7%94%A8python%E6%8A%93%E5%8F%96rejet%E4%BD%9C%E5%93%81%E5%AE%98%E5%8D%9A/</guid>
      <description>今天又被安利了R社的另一个IP——「幽幻ロマンチカ」，还是和剑君一样养眼的画风～～ 不过小透明不会日语再也啃不动了QWQ
于是打算搜刮一波图来舔，打开官博之后发现竟然和剑君的是一个套路（也许R社太懒两个作品的官博用的就是同一套CMS换了个主题hhhh）：
「幽幻ロマンチカ」的URL前缀是：
http://rejetweb.jp/yuroma/blog/
剑君的是：
http://rejetweb.jp/kengakimi/blog/
所以就翻出了几个月前自己用来下剑君官博的图的脚本，把前缀的配置提出来就可以支持这个作品了～
代码传到了Github Gist上，完全使用正则表达式来匹配，因为是一次性的活所以小透明就怎么方便怎么来了～
 &amp;nbsp;</description>
    </item>
    
    <item>
      <title>卸载微信了！！</title>
      <link>/blog/2018/04/%E5%8D%B8%E8%BD%BD%E5%BE%AE%E4%BF%A1%E4%BA%86/</link>
      <pubDate>Mon, 02 Apr 2018 07:15:49 +0000</pubDate>
      
      <guid>/blog/2018/04/%E5%8D%B8%E8%BD%BD%E5%BE%AE%E4%BF%A1%E4%BA%86/</guid>
      <description> 因为有一些迫不得已的事情（人←_←）所以还是得收取微信消息
所以写了这个桥（Github），可以使用Riot.im收取和回复微信消息(端到端加密的支持以后看心情了= =，matrix.org用的是https，我还是信任matrix.org的人品的)，服务端挂在服务器上，效果如下（还很简陋后面会优化的= =）：         
神清气爽！！！ </description>
    </item>
    
    <item>
      <title>Python对象的拷贝和深度拷贝</title>
      <link>/blog/2018/03/python%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B7%B1%E5%BA%A6%E6%8B%B7%E8%B4%9D/</link>
      <pubDate>Tue, 27 Mar 2018 09:55:45 +0000</pubDate>
      
      <guid>/blog/2018/03/python%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B7%B1%E5%BA%A6%E6%8B%B7%E8%B4%9D/</guid>
      <description>Python语言中，对象的传递默认是引用传递，如果需要创建一个对象的拷贝可以使用copy库：
import copy list1=[&amp;#39;1&amp;#39;] list2=copy.copy(list1) list2.append(&amp;#39;2&amp;#39;) print(list1) #[&amp;#39;1&amp;#39;] 不过,copy.copy(x)方法是浅层拷贝（即如果list1是一个包含list的list，那么它包含的list仍然会被以引用形式传递）:
import copy list1=[[&amp;#39;1&amp;#39;]] list2=copy.copy(list1) list2[0].append(&amp;#39;2&amp;#39;) print(list1) #[[&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;]] 而copy.deepcopy(x)方法即为深度拷贝，会将对象中包含的所有对象也进行拷贝：
import copy list1=[[&amp;#39;1&amp;#39;]] list2=copy.deepcopy(list1) list2[0].append(&amp;#39;2&amp;#39;) print(list1) #[[&amp;#39;1&amp;#39;]] </description>
    </item>
    
    <item>
      <title>python使用colorama实现控制台彩色文字输出</title>
      <link>/blog/2018/03/python%E4%BD%BF%E7%94%A8colorama%E5%AE%9E%E7%8E%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BD%A9%E8%89%B2%E6%96%87%E5%AD%97%E8%BE%93%E5%87%BA/</link>
      <pubDate>Sat, 24 Mar 2018 13:51:25 +0000</pubDate>
      
      <guid>/blog/2018/03/python%E4%BD%BF%E7%94%A8colorama%E5%AE%9E%E7%8E%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BD%A9%E8%89%B2%E6%96%87%E5%AD%97%E8%BE%93%E5%87%BA/</guid>
      <description>&lt;p&gt;为了之后写代码方便，打算写一个&lt;a href=&#34;https://github.com/eternal-flame-AD/eflog&#34;&gt;日志模块&lt;/a&gt;，需要实现在控制台上展示不同颜色的文字区分日志紧急度，于是发现了这个colorama模块（&lt;a href=&#34;https://github.com/tartley/colorama&#34;&gt;Github&lt;/a&gt;）~&lt;/p&gt;

&lt;p&gt;colorama可以实现跨平台的前/背景彩色输出，同时还可以加入调暗等文字效果，十分方便&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>